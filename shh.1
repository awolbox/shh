.\" Automatically generated by Pandoc 2.1.3
.\"
.TH "SHH" "1" "May 2018" "shh Manual Page" ""
.hy
.SH NAME
.PP
shh \- The shell program helper utility
.SH SYNOPSIS
.PP
\f[I]shh\f[] [\f[I]OPTIONS\f[]] [\f[I]COMMAND\f[]]
.SH NOTES
.SH DESCRIPTION
.PP
\f[I]shh\f[] is a small utility script used to help setup, and control
new working environments.
These working environments are of assumed to be shell program, a
\f[I]bash\f[] shell to be more specific.
\f[I]shh\f[] is capable of handling very large programs, and while
sometimes it might just be best to switch to a more \[lq]capable\[rq]
language when a program gets very large, \f[I]bash\f[] seems to be a
language capable of very large programs.\ 
.PP
The logic of \f[I]shh\f[] is simple:
.PD 0
.P
.PD
\  * The program is broken up into three parts \- \f[I]vars\f[],
\f[I]functions\f[], and an \f[I]executive\f[].
.PD 0
.P
.PD
\  * A \f[I]native directory\f[] known as the \f[I]init directory\f[] is
then created.
.PD 0
.P
.PD
\  * The \f[I]init directory\f[] is a \f[I]parent directory\f[], which
contains all other parent directories.
.PD 0
.P
.PD
.SS \f[I]Terminology:\f[]
.PD 0
.P
.PD
.TP
.B \f[I]native files\f[]
Files that are native to the working environment, that is, files, that
are not \f[I]special files\f[], which only exist prior toa
\f[I]merge\f[], and will not get merged into the \f[I]working
executive\f[] (ex: \f[I]vars\f[] \f[I]functions\f[]).
.PD 0
.P
.PD
\f[I]vars\f[]
.RS
.RE
A file containing all \f[I]ENVIRONMENT\f[] variables, and all
\[lq]common\[rq] or \[lq]global\[rq] variables, meaning all variables
not contained within the scope of a function.
.PD 0
.P
.PD
\f[I]functions\f[]
.RS
.RE
A file which sources all functions in order.
.PD 0
.P
.PD
.RS
.RE
.SH WORKFLOW
.PP
\- Start a new working environment in the current directory with
\f[I]init\f[].
.PD 0
.P
.PD
\- Use \f[I]af\f[] or \f[I]ae\f[] to add new functions, or non\-local
variables, respectively
.SH OPTIONS
.TP
.B \-s, \-\-silent
Do not prompt the user for anything (Suppresses all stdout).
.RS
.RE
.TP
.B \-h, \-\-help
Display usage information.
Use \f[I]\-h\f[] for short usage information, \f[I]\[en]help\f[] for
long usage information.
.RS
.RE
.TP
.B \-v, \-\-version
Display version information.
\f[I]\-v\f[] shows short information, while \f[I]\[en]version\f[]
displays long version information.
.RS
.RE
.TP
.B \-\-licence
Display licensing and copyright information.
.RS
.RE
.TP
.B \-\-warranty
Display warranty information.
.RS
.RE
.SH COMMANDS
.TP
.B new
Create a new working directory.
The user is prompted to name the future executive, unless a name is
supplied by \f[I]\-n\f[] or \f[I]\[en]name=\f[].
.RS
.RE
.TP
.B del
Delete all working files created, while still leaving all other files in
the current directory intact.
.RS
.RE
.TP
.B lv
List variables stored in \f[I]vars\f[].
.RS
.RE
.TP
.B lf
List and index all functions stored in \f[I]functions\f[].
.RS
.RE
.TP
.B merge
Compile all working files together, based on function index.
\f[I]Special files\f[] will also be checked, and handled.
By the end of the \[lq]compilation\[rq] process, all working files
should be merged into one working executive.
.RS
.RE
.SH SEE ALSO
.PP
gnu <https://gnu.org>, fsf <https://fsf.org>
.SH AUTHORS
awol <awol@member.fsf.org>.
